# @configure_input@

# Package-specific substitution variables
package = @PACKAGE_NAME@
version = @PACKAGE_VERSION@
tarname = @PACKAGE_TARNAME@
distdir = $(tarname)-$(version)

# Prefix-specific substitution variables
prefix      = @prefix@
includedir  = @includedir@
docdir      = @docdir@
htmldir     = @htmldir@
libdir      = @libdir@
# Supplementary
exec_prefix = @exec_prefix@
libexecdir  = @libexecdir@
lispdir     = @lispdir@
# VPATH-specific substitution variables
srcdir = @srcdir@
VPATH  = @srcdir@

# Tool-specific substitution variables
CC        = @CC@
CFLAGS    = @CFLAGS@
CPPFLAGS  = @CPPFLAGS@
FC        = @FC@
FCFLAGS   = @FCFLAGS@
LIBS      = @LIBS@
LDFLAGS   = @LDFLAGS@
INSTALL   = @INSTALL@


ifeq ($(CC),gcc)
#CFLAGS = -g -fPIC -O2 -fexceptions -Wall -Werror -Wpedantic -Wextra
endif
ifeq ($(FC),gfortran)
#FCFLAGS = -g -fPIC -O2 -fcheck=all -Waliasing -Wampersand -Wconversion -Wsurprising -Wintrinsics-std -Wno-tabs -Wintrinsic-shadow -Wline-truncation -Wreal-q-constant -Wuninitialized  -fbacktrace -ffpe-trap=zero,overflow,underflow -finit-real=nan
endif

ifeq ($(CC),icc)
#CFLAGS = -xHost -fPIC -g -O2 -fexceptions -Wall -Werror -Wpedantic -Wextra
endif
ifeq ($(FC),ifort)
#FCFLAGS = -xHost -fPIC -g -O2
endif

ifeq ($(CC),clang)
#CFLAGS = -fPIC -g -O2
endif
ifeq ($(FC),flang)
#FCFLAGS = -fPIC -g -O2
endif

OBJECT_FILES= trexio.o trexio_text.o trexio_hdf5.o
SOURCE_FILES= test.c trexio.c trexio_hdf5.c trexio_text.c
HEADER_FILES= trexio.h trexio_text.h trexio_hdf5.h trexio_s.h
ORG_FILES= templates_front/templator_front.org  templates_text/templator_text.org \
           templates_hdf5/templator_hdf5.org


.PHONY: all fortran clean clean-all install
.POSIX:
.SUFFIXES:


all: libtrexio.so fortran


libtrexio.so: $(OBJECT_FILES) $(HEADER_FILES) 
	$(CC) -shared $(OBJECT_FILES) -o libtrexio.so
	cp -- $(HEADER_FILES) $(includedir)


fortran: trexio_f.o


trexio_f.o: libtrexio.so trexio_f.f90
	$(FC) $(FCFLAGS) -c trexio_f.f90 -o trexio_f.o
	cp -- trexio.mod $(includedir)


cppcheck: cppcheck.out
	cat cppcheck.out


cppcheck.out: $(HEADER_FILES) $(SOURCE_FILES)
	cppcheck --addon=cert -q --error-exitcode=0  \
          --enable=warning,performance,portability,missingInclude,information \
          --language=c --std=c99 -rp --platform=unix64  \
          $(CPPFLAGS) $(SOURCE_FILES) 2>$@


trexio.c trexio_f.f90 trexio.h: $(ORG_FILES)
	cd ../tools && ./build_trexio.sh && cd ../src


# $(DESTDIR) is needed for future support of package managers
# install should avoid build target due to possible conflict when prefix overriden
install:
	$(INSTALL) -d $(DESTDIR)$(libdir) $(DESTDIR)$(includedir)
	cp libtrexio.so $(DESTDIR)$(libdir)
	cp trexio*.h $(DESTDIR)$(includedir)
#	cp trexio.mod $(DESTDIR)$(includedir)


clean:
	$(RM) -- *.o libtrexio.so trexio.mod 


clean-all:
	$(RM) -- *.c *.h *.o libtrexio.so trexio.mod


%.o: %.c $(HEADER_FILES)
	$(CC) $(CPPFLAGS) $(CFLAGS) -c $*.c -o $*.o


Makefile: Makefile.in ../config.status
	cd .. && ./config.status src/$@


../config.status: ../configure
	cd .. && ./config.status --recheck

